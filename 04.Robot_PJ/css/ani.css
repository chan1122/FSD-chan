@charset "utf-8";
/* 로봇PJ 애니메이션 css - ani.css */

/********************************************************************** 
 [css로 애니메이션 넣기]
 - 시간에 따라 css설정이 변경되어 애니메이션 되도록 키프에임을 설정하고 이것을 
 호출함으로 의도된 연출을 구현하는것. ---> 이것이 css 애니메이션이다!

 [애니메이션 키프레임]
 - 키프레임이란? 애니메이션 장면을 넣는 코드

 1. 두장면 애니메이션

 @keyframes 키프레임명(
    from{시작css}
    to{끝나는 css}
)
또는 
 @keyframes 키프레임명(
    0%{시작css}
    100%{끝나는 css}
)

-> 만약 from/0% 설정이 초기설정과 같다면 from을 생략할 수 있다!

2. 여러장면 키프레임
 @keyframes 키프레임명(
    0%{css 설정}
    10%{css 설정}
    20%{css 설정}
    30%{css 설정}
    ...
    80%{css 설정}
    90%{css 설정}
    100%{css 설정}
)
(1) 장면에 대한 시간계산은 어떻게 하나?
-> 전체시간 * 설정된% / 100

(2) 전체 애니메이샨 시산은 언제 셋팅하나? 
-> 호출시에 셋팅!

[ 설정된 키프레임 호출하는 방법 ]
animation: 이시이지반방마
            (이름 시간 이징 지연 반복 방향 마지막상태)
1. 이름(animation-name) : 키프레임 이름

2. 시간(animation-duration) : 애니메이션 동작시간
        -> 초단위(s)

3. 이징(animation-timing-function) : easing 가속도

4. 지연(animation-delay) : 애니메이션 지연시간(s)

5. 반복(animation-iteration-count) : 애니메이션 반복
    - 기본값 1, 숫자를 쓰면 숫자만큼 반복
    - 영원히 infinity(인피니트)

6. 방향(animation-direction) : 시작 -> 끝
    - 두번이상 반복할 경우 반대 경로로 애니메이션 설정가능
    -> alternate : 시작 -> 끝, 끝 -> 시작
7. 마지막 상태(animation-fill-mode) : - 애니메이션이 끝났을떄 처음으로 돌아가는게 기본!
-forwars (앞쪽에 ... 즉, 애니메이샨끝장면 으로 마무리!)
-기본값 : backwards(뒤쪼으로,즉 처음으로!)
-> 유의사항 : infinite(영원히)일떄는 해당사항 없음
**********************************************************************/

/*  1. 로고  */
.logo {
    /* 정중앙이동
    방법: 50%씩 top,left를 밀고
    자신의 크기의 절반씩 반대 방향으로 이동함
        [css계산함수]
        calc(계산식) -> 4칙연산가능 
        calc(50% - 특징px)
        !!!! 주의점 - 옆에 띄어쓰기 꼭할것!!!!
        */
        top: calc(50% - 102px);
        left: calc(50% - 102px);
        /* 로고는 204라서 102임 */
        
        /* 정중앙 이동하기 방법 2
        to[, left값을 50% 로 설정한뒤 
        트랜스폼 translate(-50% -50%)
        현제위치에서 내크기의 절반만큼 왼쪾,윗쪽으로 이동!
        */
        /* top: 50%;
        left: 50%;
        transform: translate(-50%, -50%); */
        transform: scale(2) skew(90deg) rotateY(180deg);

        animation: logoani 2s ease-in-out 1s alternate forwards, logoani2 .5s ease-in-out 3s infinite alternate;
}


@keyframes logoani {
        /* 초기설정이 from 이므로 생략! */
        /* to는 원앨위치와 크기로!!!!! */
        to{
            top: 50px;
            left: 50px;
            transform: scale(1);

        }
}
@keyframes logoani2 {
    0%{
        transform: rotate(0deg) scale(1);
    }
    100%{
        transform: rotate(-20deg) scale(.5);
    }
    
}


/* 2. 로봇머리 */
.head {
    top: -1000px;
    /* top값이 % 가 ㅇ적용안되는 이유: 부모박스의 높이값이 auto 즉 지정하지않아서 적용안됨. 특정크기를 주면 적용됨 */
    animation:headani 1s ease-out 4s forwards;
}
@keyframes headani {
    to{
        /* 원레위치로 */
        top: 0;
    }
    
}

/* 3. 로봇몸 */
.body {
    left: -100%;
    animation: bodyani 3s ease-out 2s forwards;
}

@keyframes bodyani {
    to{
        left: 0;
    }
    
}

/* 4. 설명링크 */
.link{
    opacity: 0;
    animation: opaani 2s linear 4s forwards;
}

/* 5. 위로가기 버튼 */
.but{
    /* 투명상태 */
    opacity: 0;
    animation: opaani 1.5s linear 4s forwards;

}

/* tv */
.tv{
    /* 투명상태 */
    opacity: 0;
    animation: opaani 1s linear 4s forwards;
}

/* 설명링크, 위로이동버튼 tv등장 공통 키프레임 */
@keyframes opaani {
    20%{
        opacity: 1;
    }
    40%{
        opacity: 0;
    }
    60%{
        opacity: 1;
    }
    80%{
        opacity: 0;
    }
    100%{
        opacity: 1;
    }
    
}
/* 키프레임! */

.a2{
    
    transform-origin: center 20px;
    animation: a2ani .6s ease-in-out 6s forwards,
    a2ani2 .2s linear 6.4s infinite alternate;
}
@keyframes a2ani {
    to{
        transform: rotate(-150deg);
    }
}

@keyframes a2ani2 {
    to{
        transform: rotate(-130deg);
    }
}
.a1{
    
    transform-origin: center 20px;
    animation: a1ani .6s ease-in-out 6s forwards,
    a1ani2 .2s linear 6.4s infinite alternate;
}
@keyframes a1ani {
    to{
        transform: rotate(150deg);
    }
}

@keyframes a1ani2 {
    to{
        transform: rotate(130deg);
    }
}

/* 입 */
.mouth{
    animation: mouthani .05s linear 6s infinite alternate;
}
/* 입 애니 키프레임 */
@keyframes mouthani {
    to{
        transform: scaleY(.5);

    }
    
}

/* 다리 */
.l1{
    
    transform-origin: center 20px;
    animation: l1ani .6s ease-in-out 10s forwards,
    l1ani2 .2s linear 10s infinite alternate;
}
@keyframes l1ani {
    to{
        transform: rotate(80deg);
    }
}

@keyframes l1ani2 {
    to{
        transform: rotate(130deg);
    }
}
.l2{
    
    transform-origin: center 20px;
    animation: l2ani .6s ease-in-out 15s forwards,
    l2ani2 .2s linear 12s infinite alternate;
}
@keyframes l2ani {
    to{
        transform: rotate(150deg);
    }
}

@keyframes l2ani2 {
    to{
        transform: rotate(130deg);
    }
}